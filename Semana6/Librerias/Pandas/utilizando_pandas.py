# -*- coding: utf-8 -*-
"""Utilizando_pandas.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1lttEQvU-k-2OfTTxxkEs_Wjs6h4K3Pi3
"""

# Importamos las librerias
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sb
from google.colab import files
import io

# Commented out IPython magic to ensure Python compatibility.

# Esta linea permite que los graficos sean renderizados directamente en nuestro Notebook
## Carguemos en un pandas dataframe nuestra base de datos
# %matplotlib inline

"""Carguemos en un pandas dataframe nuestra base de datos
pd.read_csv es el metodo que nos permite importar los datos desde un CSV y cargarlo en un **DataFrame**, que es la estructura de base de Pandas
"""

# Esta linea permite cargar el archivo peliculas.csv
uploaded=files.upload()

# Esta linea permite visualizar el encabezado del archivo peliculas.csv
#uploaded

# Esta linea permite codificar el archivo peliculas.csv
movies= pd.read_csv(io.StringIO(uploaded['peliculas.csv'].decode('utf-8')))

type(movies)



movies.head()

# Cuantas lineas y columnas tiene nuestro dataframe
### Un dataframe es una estructura de datos que se compone de los elementos siguientes
movies.shape

#visualizemos las columnas
movies.columns

movies.index

columna1 = movies['movie_title']
columna1.head()

linea = movies.loc[10,:]
linea

movies.loc[:,'movie_title'].head()

"""# Intentemos inspeccionar nuestros datos y entenderlos mejor

# **Inspección de los tipos de datos**
# Datos importantes:


1.   La inspección de los datos se da para tener conocimiento de la salud de los datos que tenemos, saber si vienen limpios o no, y también porque se quiere tener un entendimiento cuantitativo de ellos. Parte de esto es mirar gráficos estadísticos y entender diferentes propiedades numéricas de las columnas.
2.   A diferencia de Numpy, Pandas no solo permite cargar datos numéricos, sino también datos de texto.
3.   El método info nos va a mostrar la cantidad completa de columnas con la cantidad de elementos no nulos que hay en esas columnas, y por último muestra el tipo de cada columna.
"""

#visualizemos las columnas con su respectivo tipo, permite manejar texto
movies.info()

# columnas númericas y columnas de texto
movies.dtypes == float

movies.dtypes == int

movies.dtypes == object

num = (movies.dtypes == float) | (movies.dtypes == int)
num

num.index

for el in num.index:
    print(el)

num_cols = [c for c in num.index if num[c]]

num_cols

movies.dtypes == object

obj = (movies.dtypes == object)
obj_cols = [c for c in obj.index if obj[c]]

obj_cols

num_cols

movies_num = movies[num_cols]

# Estadísticas de las columnas númericas
movies_num.describe()